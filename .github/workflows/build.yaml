name: Dependency and Secret Scan

on:
  push:
    branches: [master]
  pull_request:

jobs:
  scan:
    runs-on: ubuntu-latest

    steps:
      # 1. Clonar el repositorio manualmente
      - name: 📥 Clone Repository
        run: |
          git clone https://github.com/${{ github.repository }} repo
          cd repo

      # 2. Instalar Dependency-Check utilizando Homebrew
      - name: 🔧 Install Dependency-Check via Homebrew
        run: |
          # Actualizar apt-get e instalar wget
          sudo apt-get update
          sudo apt-get install -y wget build-essential

          # Instalar Homebrew si no está instalado
          if ! command -v brew &> /dev/null
          then
            echo "Homebrew no encontrado, instalando..."
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
          fi

          # Asegurarnos de que Homebrew está en el PATH
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

          # Instalar Dependency-Check usando Homebrew
          brew install owasp-dependency-check

      # 3. Verificar que dependency-check se haya instalado correctamente
      - name: 🔧 Verify Dependency-Check Installation
        run: |
          dependency-check --version

      # 4. Ejecutar el escaneo de dependencias con Dependency-Check
      - name: 🛡️ Run Dependency-Check (Vulnerabilities in dependencies)
        run: |
          dependency-check --project "My Project" --scan ./repo --out ./dependency-check-report --format "HTML"

      # 5. Instalar GitSecrets para escanear secretos en el código
      - name: 🔧 Install GitSecrets
        run: |
          sudo apt-get update && sudo apt-get install -y git-secrets
          git secrets --register-aws --global

      # 6. Ejecutar el escaneo de secretos con GitSecrets
      - name: 🔍 Run GitSecrets Scan
        run: |
          git secrets --scan --recursive ./repo

      # 7. Opción alternativa para escanear secretos usando TruffleHog
      - name: 🔍 Run TruffleHog (Secret scanning)
        run: |
          pip install truffleHog
          trufflehog --json --max_depth 10 --regex --entropy=True ./repo > trufflehog-report.json
